name: Deploy Kubonacci
on:
  push:
    branches:
      - main
      - master
env:
  SHA: $(git rev-parse HEAD)
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: |-
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t arjunank/react-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true arjunank/react-test npm test
      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.26.0'
        id: install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id kubonacci_id --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env
      # - name: Build, tag, and push image to Amazon ECR
        # env:
          # ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # ECR_REPOSITORY: kubonacciecs
          # IMAGE_TAG: ${{ github.sha }}
        # run: |
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          # docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
      - name: Update kube config
        run: aws eks update-kubeconfig --name kubonacci --region ap-south-1
      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f k8s